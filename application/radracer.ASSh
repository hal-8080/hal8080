INIT:
		# Set segments to empty
		# Top half is left segment, bottom half is right segment
	SETHI %dispL, 11111111
	SETLO %dispL, 11111111
	SETHI %dispM, 11111111
	SETLO %dispM, 11111111
	SETHI %dispR, 11111111
	SETLO %dispR, 11111111
	
	SETHI %playerState, 00000001 
	SETLO %playerState, 00000000
	
		# Create superposition of player and first display
	INV %TempVal1, %dispL
	OR %TempVal1, %playerState
	INV %Comb, %TempVal1
	
	ST @DISPLEFT, %Comb
	ST @DISPMIDDLE, %dispM
	ST @DISPRIGHT, %dispR

	SETHI %score, x00
	SETLO %score, x00
	
	SETHI %maxTimer, 00000011 # Start at 1000 ms per move
	SETLO %maxTimer, 11101000
	
	ST @TIMER0, %r1
	LD %Timer, @TIMER1



LOOP:
	CALL @UPDATEPLAYER
	CALL @UPDATEFIRSTDISPLAY
	CALL @COLLISION
	CALL @UPDATEDISPLAYS
	CALL @WRITEDISPLAYS
	BA @LOOP
	


UPDATEPLAYER:
	LD %buttonState, @BUTTONSTATE
# checkUP:
	SETLO %TempVal1, x00
	SETHI %TempVal1, x10
	AND %TempVal1, %buttonState
	BZERO @checkDOWN
	
	SETHI %playerState, 01000000	# Player state = up
	SETLO %playerState, x00
	RETURN
	
checkDOWN:
	SETHI %TempVal1, x20
	SETLO %TempVal1, x00
	AND %TempVal1, %buttonState
	BZERO @setMIDDLE
	
	SETHI %playerState, 0001000 	# Player state = down
	SETLO %playerState, x00
	RETURN

setMIDDLE:
	SETHI %playerState, x01
	SETLO %playerState, x00
	RETURN



UPDATEFIRSTDISPLAY:
		# Create superposition of player and first display
	INV %TempVal1, %dispL
	OR %TempVal1, %playerState
	INV %Comb, %TempVal1
	ST @DISPLEFT, %Comb
	RETURN



COLLISION:
	INV %TempVal1, %dispL
	AND %TempVal1, %playerState
	BZERO @RETURNFLAG
	CALL @DEAD



UPDATEDISPLAYS:
	LD %Timer, @TIMER1
	CP %TempVal1, %maxTimer
	SUB %TempVal1, %Timer
	BNEG @MOVEDISPLAYS
	RETURN

MOVEDISPLAYS:
	ST @TIMER0, %r0
	SUB %maxTimer, 10
	ADD %score, %r1

		# seg5 = seg4
	SHIFTL %dispL, 8
		# seg4 = seg3
	CP %TempVal1, %dispM
	SHIFTR %TempVal1, 8
	SETHI %TempVal1, x00
	OR %dispL, %TempVal1
		# seg3 = seg2
	SHIFTL %dispM, 8
		# seg2 = seg1 
	CP %TempVal1, %dispR
	SHIFTR %TempVal1, 8
	SETHI %TempVal1, x00
	OR %dispM, %TempVal1
		# seg1 = seg0 
	SHIFTL %dispR, 8

	ST @TIMER0, %r1 		# Start the timer
	
		# if seg3 == EMPTY
		# 	seg0 = EMPTY
	CP %TempVal1, %dispM
	INV %TempVal1
	SHIFTR %TempVal1, 7
	SETHI %TempVal1, x00
	SHIFTL %TempVal1, 7
	OR %TempVal1, %r0 
	BZERO @addNothing

		# if seg2 == EMPTY
		# 	seg0 = seg1
	CP %TempVal1, %dispM
	INV %TempVal1
	SHIFTL %TempVal1, 1
	SETHI %TempVal1, x00
	SHIFTR %TempVal1, 1
	OR %TempVal1, %r0 
	BZERO @addPrevious

		# else
		# 	seg0 = RAND VAL
	BZERO @addRandom

addNothing:
	SETLO %dispR, 0111 1111
	RETURN

addPrevious:
	CP %TempVal1, %dispR
	SHIFTR %TempVal1, 8
	SETLO %dispR, x00
	SETHI %TempVal1, x00
	OR %dispR, %TempVal1
	RETURN

addRandom:
	RAND %TempVal1
	SETHI %TempVal2, x00
	SETLO %TempVal2, 0100 1001
	AND %TempVal1, %TempVal2		# Check if not all 3 positions are 0
	BZERO @addRandom
	CP %TempVal2, %TempVal1
	SETHI %TempVal3, x00 
	SETLO %TempVal3, 0100 1001
	SUB %TempVal2, %TempVal3	# Check if not all 3 positions are 1
	BZERO @addRandom

	SHIFTL %TempVal1, 1
	SETHI %TempVal1, xFF
	SHIFTL %TempVal1, 1
	SETHI %TempVal1, x00
	INV %TempVal1, %TempVal1
	SETLO %dispR, x00
	OR %dispR, %TempVal1
	RETURN



WRITEDISPLAYS:
	INV %TempVal1, %dispL
	OR %TempVal1, %playerState
	INV %Comb, %TempVal1
	
	ST @DISPLEFT, %Comb
	ST @DISPMIDDLE, %dispM
	ST @DISPRIGHT, %dispR



DEAD:
	# set timer0 = 0
	# write score to display
	# check for user input
	# if both buttons pressed, jump INIT

	ST @TIMER0, %r0
	DISPRHR %score

	LD %buttonState, @BUTTONSTATE
	SETHI %TempVal1, x20
	SETLO %TempVal1, x00
	AND %TempVal1, %buttonState
	BZERO @DEAD
	SETHI %TempVal1, x10
	SETLO %TempVal1, x00
	AND %TempVal1, %buttonState
	BZERO @DEAD

	BA @INIT



RETURNFLAG: 	# For conditional RETURNS
	RETURN