# Rad racer program

# $r0 = $r0
# $r1 = $r1 
# $r2 = 
# $r3 = TempVal3
# $r4 = TempVal2
# $r5 = Tempval1
# $r6 = ButtonState
# $r7 = Timer 
# $r8 = maxTimer 
# $r9 = score
# $rA = ASSEMBLER RESERVED
# $rB = playerState
# $rC = dispL
# $rD = dispM
# $rE = dispR
# $rF = Comb

# let preVars = [
#     ["@_BIOS_@",         0],
#     ["@_RAM_@",       1024],
#     ["@_DISPLAY_@",  2024],
#     ["@_SEG01_@",    2024],
#     ["@_SEG23_@",    2026],
#     ["@_SEG45_@",    2028],
#     ["@_LEDS_@",     2030],
#     ["@_SWITCHES_@", 2032],
#     ["@_BUTTONS_@",  2034],
#     ["@_PREVBUTTONS_@",  2036],
#     ["@_MILLIS_@",   2038],
#     ["@_DEBUG_@",    2040],
#     ["@_ATIMER1_@",  2042],
#     ["@_TIMER1_@",   2044],
#     ["@_ATIMER2_@",  2046],
#     ["@_TIMER2_@",   2048],
#     ["@_DBGFLAGS_@", 2050],
#     ["@_DBGREGISTERS_@", 2052],
# ]


# Buttons: XXXX XXXX XXXX 3210
# Levers:  XXXX XX98 7654 3210

INIT:
		# Set segments to empty
		# SETHI is left segment, SETLO is right segment
		# The segments are ordered as follows: X6543210. They are active LOW.
	SETHI $rC, "01111111"
	SETLO $rC, "01111111"
	SETHI $rD, "01111111"
	SETLO $rD, "01111111"
	SETHI $rE, "01111111"
	SETLO $rE, "01111111"
	
		# Set player to the middle
	SETHI $rB, "01000000" 
	SETLO $rB, "00000000"

		# Create superposition of player and first display
	INV $r5, $rC
	OR $r5, $rB
	INV $rF, $r5
	
	ST $rF, @_SEG45_@
	ST $rD, @_SEG23_@
	ST $rE, @_SEG01_@

		# Set score to 0
	SETHI $r9, x"00"
	SETLO $r9, x"00"
	
		# Set MaxTimer to 1000ms
	SETHI $r8, "00000011"
	SETLO $r8, "11101000"

		# Start the timer
	ST $r1, @_ATIMER1_@
	LD $r7, @_TIMER1_@



LOOP:
	CALL @UPDATEPLAYER
	CALL @UPDATEFIRSTDISPLAY
	#CALL @COLLISION
	#CALL @UPDATEDISPLAYS
	#CALL @WRITEDISPLAYS
	BA @LOOP	

UPDATEPLAYER:
    LD $r6, @_BUTTONS_@
    SETHI $r5, x"00"
    SETLO $r5, x"08"
    SUB $r5, $r6
    BZERO @up
    
    SETHI $r5, x"00"
    SETLO $r5, x"04"
    SUB $r5, $r6
    BZERO @down
    BA @middle

middle:
    SETHI $rB, "01000000"
    SETLO $rB, "00000000"
	RET

up: 
    SETHI $rB, "00000001"
	SETLO $rB, "00000000"
	RET

down:
    SETHI $rB, "00001000"
	SETLO $rB, "00000000"
	RET


UPDATEFIRSTDISPLAY:
		# Create superposition of player and first display
	INV $r5, $rC
	OR $r5, $rB
	INV $rF, $r5
	ST $rF, @_SEG45_@
	RET

##### IT WORKS UP TO HERE #####

COLLISION:
	INV $r5, $rC
	AND $r5, $rB
	CP $r6, $rB
	SUB $r6, $r5 
	BZERO @DEAD
	RET


UPDATEDISPLAYS:
	LD $r7, @_TIMER1_@
	CP $r5, $r8
	SUB $r5, $r7
	BNEG @MOVEDISPLAYS
	RET

MOVEDISPLAYS:
		# Stop timer, reduce maxTimer, increment score
	ST $r0, @_ATIMER1_@
	SUB $r8, 10
	ADD $r9, $r1

		# seg5 = seg4
	SHIFTL $rC, 8
		# seg4 = seg3
	CP $r5, $rD
	SHIFTR $r5, 8
	SETHI $r5, x"00"
	OR $rC, $r5
		# seg3 = seg2
	SHIFTL $rD, 8
		# seg2 = seg1 
	CP $r5, $rE
	SHIFTR $r5, 8
	SETHI $r5, x"00"
	OR $rD, $r5
		# seg1 = seg0 
	SHIFTL $rE, 8

	ST $r1, @_ATIMER1_@  		# Start the timer
	
		# if seg3 == EMPTY
		# 	seg0 = EMPTY
	INV $r5, $rD
	SHIFTR $r5, 7
	SETHI $r5, x"00"
	SHIFTL $r5, 7
	SUB $r5, $r0 
	BZERO @addNothing

		# if seg2 == EMPTY
		# 	seg0 = seg1
	INV $r5, $rD
	SHIFTL $r5, 1
	SETHI $r5, x"00"
	SHIFTR $r5, 1
	SUB $r5, $r0 
	BZERO @addPrevious

		# else
		# 	seg0 = RAND VAL
	BA @addRandom

addNothing:
	SETLO $rE, "01111111"
	RET

addPrevious: 
	CP $r5, $rE
	SHIFTR $r5, 8
	SETHI $r5, "00000000"	# $r5 = 0000 0000 0XXX XXXX
	SETLO $rE, "00000000" 	# $rE = 0XXX XXXX 0000 0000
	OR $rE, $r5				# $rE = 0XXX XXXX 0XXX XXXX
	RET

addRandom:
	RAND $r5
	SETHI $r4, x"00"
	SETLO $r4, "01001001"
	AND $r5, $r4		# Check if not all 3 positions are 0
	SUB $r5, $r0
	BZERO @addRandom
	CP $r4, $r5
	SETHI $r3, x"00"
	SETLO $r3, "01001001"
	SUB $r4, $r3	# Check if not all 3 positions are 1
	BZERO @addRandom

		# Ensure the new display has format 1X00X00X, invert to 0X11X11X
	SHIFTL $r5, 1
	SETHI $r5, x"FF"
	SHIFTR $r5, 1
	SETHI $r5, x"00"
	INV $r5, $r5
	SETLO $rE, x"00"
	OR $rE, $r5
	RET



WRITEDISPLAYS:
	INV $r5, $rC
	OR $r5, $rB
	INV $rF, $r5

	ST $rF, @_SEG45_@
	ST $rD, @_SEG23_@
	ST $rE, @_SEG01_@



DEAD:
	# set timer0 = 0
	# write score to display
	# check for user input
	# if both buttons pressed, jump INIT

	ST $r0, @_ATIMER1_@
	DISPRHR $r9

	LD $r6, @_BUTTONS_@
	SETHI $r5, x"00"
	SETLO $r5, x"0C"
	SUB $r5, $r6
	BZERO @INIT

	BA @DEAD

RETFLAG: 	# For conditional RETS
	RET