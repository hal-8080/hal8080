Nick: Datapath en control samenvoegen, portmappen, testen
Kasper: Assembler maken
Dennis: Micro instructions omzetten in 1's en 0's
Tjeerd: Kijken wat we precies moeten gaan inleveren

TODO
	Datapath+Control en memory samenvoegen, testen
	Assembly programma's testen

REQUIREMENTS
	1 or 2 Address machine
	Word size
	Processor Description
		Separate entity-architecture for the data path
		High level schematic of the data path
		Separate entity-architecture for the controller
		Separate entity-architecture for the processor
		The processor must have a test pin
			Postpone next instruction until test pin is deactivated
		Main memory is byte addressable and aligned addressing is used
		After reset the first instruction is read from main memory address decimal 0
	Separate entity-architecture for main memory is required
	Application
		Documentation of your instruction set is important
	Instruction set
		~10 instructions
		Must include Branch Always, Branch on status bit, load from main memory, store to main memory
		How to indicate during simulation and synthesis that an application is finished?
	Debug Facility
		At least be able to read data from main memory at an address
		Be creative
	For the processor the timing information must be given
	Only upload desing document, relevant VHDL files, QSF-filed and SDC files and a scriptfiles for modelsim
		
		
DELIVERABLES
	TUESDAY
		Design document 
			(70% of grade)
			Upload a document with the design incl relevant Quartus RTL views etc.
			Include chapter with global contributions of each group member
			ZIP file with all relevant VHDL, QSF, SDC files and script files.
				-> Do not include files generated by the simulator/synthesis tool unless there's a good reason
			ALL DOCUMENTS IN 1 ZIP FILE
	WEDNESDAY
		Short presentation on-campus (if possible) and short video (max 5 min)
			(30% of grade)
			- Design process: impression of the design process
			- Design alternatives: Are design alternatives discussed?
			- Design decisions: Are decisions well-thought-off?
			- Quality of the demo 
		Individual reflection on the project
			Short, ~1/2 A4


WHAT WE DID
	Stopwatch
	Random number generator
	Syntax highligher
	Veel te veel instructions
	Assembler
	Display instructionset
	Memory mapped IO
	Micro-instructions
	Big-ass application
	Big-ass debug programma in assembly



--------------- VIDEO SCRIPT IDEAS ---------------


Ergens een reference naar 2001: A Space Odyssey	(I'm affraid I can't do that)?


<Intro> (Zwart/wit of desaturated)

Cliche problem statement
	<At work>
	Boss: You have to do these calculations today!
	Dude: Aw man, I sure wish I had a 2-address 16-bit processor right now
	I've got good news! The amazing 2-address 16-bit HAL8080 microprocessor is here!

	<Sad guy voor een TV>
	Are you tired of hearing "I can't do that" (insert clip van 2001 space odyssey)
	Then I've got good news! The amazing 2-address 16-bit HAL8080 microprocessor is here!

	<Playground ofzo>
	1: I have the best computer
	2: No I have the best computer 
	3: <wowfactor increase> No, I HAVE THE BEST COMPUTER 
	-> Shot van FPGA 
	The amazing new 2-address 16-bit HAL8080 processor is here!



<Body: Features>
	Instructionset
		ARITHMETIC (15)
			AND 
			NOT AND 
			OR 
			OR NOT 
			EXCLUSIVE OR
			ADD 
			SUBTRACT
			MULTIPLY 
			DIVIDE 
			SHIFT LEFT 
			SHIFT RIGHT 
			INVERT 
			POWER 
			COPY 
			!!!!! RANDOM !!!!!
		
		MEMORY (2)
			LOAD
			STORE 
		
		SET (2)
			SETHI 
			SETLO 

		BRANCH (5)
			BRANCH IF ZERO 
			BRANCH IF NEGATIVE 
			BRANCH ALWAYS 
			CALL 
			RETURN

		DISPLAY (8 DEDICATED INSTRUCTIONS)
			DISPLAY NUMBERS/LETTERS (LUT)
			DISPLAY REGISTRY CONTENTS

STOPWATCH
	Up to 2 stopwatches accurate to the millisecond

DEBUG 
	<Big error on screen>
	Aw man, my code never works, I wish there was a way to find out what's wrong.

	Do you have trouble figuring out why your code doesn't work? Hal8080 comes with an advanced integrated debugger written in HalAssembly. Not only can you PAUSE your program and execute a single instruction at the time, you can also read any user register or any memory address to figure out why your life sucks! 

APPLICATION 
	But wait there is more
	Have you ever looked at a game and though "Those graphics are just way too much"

	You're in luck! For just $399 extra the Hal8080 processor ships with the thrilling game "Rad Racer" for you 7-segment displays! Dodge a randomly generated stream of obstacles while your car drives faster and faster, until you inevitably crash and die! 

ASSEMBLER
	And Would you like to not worry about jump addresses? Use labels! With our state of the art HalAssemblyAssembler you can now automate the boring tasks! Includes a Graphical User Interface so that even your grandma can use it!

	
<Closing remarks>

Call 0900 - <catchphrase> NOW and get your own HAL8080 processor in 6 to 12 months!

Are you sad because you live a desaturated life? If you call within X minutes you will get this syntax highlighting VSCode extension! Boom, now you have colourful language! 